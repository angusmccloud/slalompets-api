service: slalompets

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-plugin-warmup
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${env:stage, 'dev'}
  region: us-east-1
  environment:
    IMAGE_TABLE: ${self:service}-${opt:stage, self:provider.stage}-images
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

functions:
  imageCreate:
    warmup: false
    prewarm: false
    handler: api/image.submit
    description: Create reference a new image
    events:
      - http:
          path: image/submit
          method: post
  imageGet:
    warmup: true
    prewarm: true
    handler: api/image.get
    description: Get a single image, by theme
    events:
      - http:
          path: image/get/{theme}
          method: get
  imageList:
    warmup: false
    prewarm: false
    handler: api/image.list
    description: Get list of all images
    events:
      - http:
          path: image/list
          method: get  
  # imageListTheme:
  #   warmup: false
  #   prewarm: false
  #   handler: api/image.listTheme
  #   description: Get list of all images for a theme
  #   events:
  #     - http:
  #         path: image/list/{theme}
  #         method: get  
  imageDelete:
    warmup: false
    prewarm: false
    handler: api/image.delete
    description: Delete an image
    events:
      - http:
          path: image/delete/{id}
          method: delete
  # themeList:
  #   warmup: false
  #   prewarm: false
  #   handler: api/image.themeList
  #   description: See a list of current Themes
  #   events:
  #     - http:
  #         path: image/theme-list
  #         method: get

resources:
  Resources:
    ImagesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "imageId"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "imageId"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.IMAGE_TABLE}